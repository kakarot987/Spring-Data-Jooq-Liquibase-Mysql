plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'org.sonarqube' version '3.1.1'
	id 'jacoco'
	id 'nu.studer.jooq' version '5.2.1'
}

apply from: 'libraries.gradle'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

group = 'com.springBoot-liquibase-jooq'
version = '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}

// Replace version suggested by Spring Boot with version we use to generate code.
// https://github.com/etiennestuder/gradle-jooq-plugin/blob/master/README.md#defining-the-jooq-version-when-the-spring-boot-plugin-is-applied
ext['jooq.version'] = ext['jooqVersion']

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.2'
	}
}

dependencies {

	// Database driver for jOOQ
	jooqGenerator(libraries.mysql)

	// Spring dependencies
	implementation(libraries.springBootStarterWeb)
	implementation(libraries.springBootActuator)

	// Database dependencies
	implementation(libraries.springBootStarterJdbc)
	implementation(libraries.liquibase)
	implementation(libraries.jooq)
	runtimeOnly(libraries.mysql)

	// Test
	testImplementation(libraries.springBootStarterTest)
}

jooq {
	version = libraries.jooqVersion

	configurations {
		main {
			generateSchemaSourceOnCompilation = false

			generationTool {
				jdbc {
					driver = 'com.mysql.cj.jdbc.Driver'
					url = 'jdbc:mysql://127.0.0.1:3306/demo'
					user = 'root'
					password = 'root123'
				}

				generator {
					name = 'org.jooq.codegen.DefaultGenerator'

					database {
						name = 'org.jooq.meta.mysql.MySQLDatabase'
						inputSchema = 'demo'
						outputSchemaToDefault = true
						excludes = 'DATABASECHANGELOG|DATABASECHANGELOGLOCK'
						forcedTypes {
							forcedType {
								name = "BOOLEAN"
								types = "(?i:(TINY)?INT(UNSIGNED)?\\(1\\))"
							}
						}
					}

					generate {
						relations = false
						deprecated = false
						records = true
						pojos = true
						daos = true
						springAnnotations = true
						javaTimeTypes = true
						fluentSetters = true
						pojosEqualsAndHashCode = true
					}

					target {
						packageName = 'co.tide.timeline.db.jooq'
						directory = 'src/generated-db-entities/java/'
					}
				}
			}

		}
	}

}

// Treat the generated sources as a separated source set so that people don't get confused in PRs.
sourceSets {
	main {
		java {
			srcDirs 'src/generated-db-entities/java'
		}
	}
}